<project name="sqlite4java-custom" default="all">
	<target name="sources">
		<mkdir dir="build/java"/>
		<copy todir="build/java">
			<fileset dir="../java"/>
		</copy>
		<copy todir="build/java" force="true">
			<fileset dir="swig/java"/>
		</copy>
	</target>
	
	<target name="swig" unless="swig.skip">
		<!-- Drop and recreate swig directory -->
		<delete dir="swig"/>
		<mkdir dir="swig/java/com/almworks/sqlite4java"/>
	
		<echo>Generating sources with swig (if this step fails it means your sources are out of date and there is a	problem with swig)
		</echo>
		<exec executable="swig" failonerror="true">
			<arg value="-java"/>
			<arg value="-package"/>
			<arg value="com.almworks.sqlite4java"/>
			<arg value="-outdir"/>
			<arg value="swig/java/com/almworks/sqlite4java"/>
			<arg value="-o"/>
			<arg value="swig/sqlite_wrap.c"/>
			<arg value="../swig/sqlite.i"/>
		</exec>
	</target>
	
	<target name="swig-message" if="swig.skip">
		<echo>Not rebuilding swig sources because they are up to date</echo>
		<echo>To force rebuilding run 'ant swig'</echo>
	</target>
	
	<target name="swig-check">
		<uptodate property="swig.skip" 
			srcfile="../swig/sqlite.i"
			targetfile="swig/sqlite_wrap.c"/>
	</target>
	
	<target name="swig-conditional" depends="swig-check,swig-message,swig"/>
	
	<target name="compile" depends="swig-conditional,sources">
		<mkdir dir="build/classes"/>
		<javac srcdir="build/java" destdir="build/classes" debug="on" source="1.5" target="1.5" includeantruntime="false">
		</javac>
	</target>
	
	<target name="jar" depends="compile">
		<mkdir dir="build/dist"/>
		<jar jarfile="build/dist/sqlite4java-custom.jar" basedir="build/classes">
			<manifest>
				<attribute name="Main-Class" value="com.almworks.sqlite4java.SQLite"/>
				<attribute name="Specification-Title" value="sqlite4java"/>
				<attribute name="Specification-Version" value="custom"/>
				<attribute name="Implementation-Title" value="sqlite4java"/>
				<attribute name="Implementation-Version" value="custom"/>
			</manifest>
		</jar>
	</target>
	
	<target name="clean">
		<delete dir="build"/>
	</target>
	
	<target name="native-init">
		<condition property="platform.makefile" value="Makefile.osx">
			<os family="mac"/>
		</condition>
		<condition property="platform.makefile" value="Makefile.linux">
			<os family="unix" name="linux"/>
		</condition>
	</target>
	<target name="native-build" if="platform.makefile">
		<property name="make.args" value=""/>
		<mkdir dir="build/dist"/>
		<echo>Building native library with makefile ${platform.makefile} and arguments ${make.args}</echo>
		<exec executable="make" failonerror="true">
			<arg value="-f"/>
			<arg value="${platform.makefile}"/>
			<arg value="all"/>
			<arg line="${make.args}"/>
		</exec>
	</target>
	<target name="native" depends="native-init,native-build"/>
	
	<target name="all" depends="jar,native"/>
	<target name="dist" depends="clean,all"/>	
</project>

